unit AddProductFormUnit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Data.DB, Data.Win.ADODB, ProjectModulesUnit;

type
  TAddProductForm = class(TForm)
    txtName: TEdit;
    lblName: TLabel;
    btnSave: TButton;
    commandAdd: TADOCommand;
    procedure FormCreate(Sender: TObject);
    procedure btnSaveClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    FDataModule: TMyDataModule;
  public
    property DataModule: TMyDataModule read FDataModule write FDataModule;
  end;

var
  AddProductForm: TAddProductForm;

implementation

{$R *.dfm}

procedure TAddProductForm.btnSaveClick(Sender: TObject);
begin
  try
    commandAdd.CommandText := 'INSERT INTO Products (ProductName, Quantity) VALUES (:ProductName, 0)';
    commandAdd.Parameters.ParamByName('ProductName').Value := txtName.Text;
    commandAdd.Execute;

    ShowMessage('Product added successfully');
  finally
    commandAdd.Free;
  end;
  AddProductForm.Close;
end;

procedure TAddProductForm.FormClose(Sender: TObject; var Action: TCloseAction);
begin
// Create a new instance of Form2
  TfrmMain := TfrmMain.Create(nil);

  try
    // Call the FormCreate event of Form2
    TfrmMain.FormCreate(Self);
  finally
    // Free the instance of Form2
    TfrmMain.Free;
  end;
end;

procedure TAddProductForm.FormCreate(Sender: TObject);
begin
  //Код для центр форм
  AddProductForm.Left := (AddProductForm.Monitor.Width  - AddProductForm.Width)  div 2;
  AddProductForm.Top  := (AddProductForm.Monitor.Height - AddProductForm.Height) div 2;
end;

end.
